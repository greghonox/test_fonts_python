{
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4-final"
  },
  "orig_nbformat": 2,
  "kernelspec": {
   "name": "python37464bitdatasciencevenv412b526c3c56420f85c408ae6ffd8a91",
   "display_name": "Python 3.7.4 64-bit ('datascience': venv)"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2,
 "cells": [
  {
   "source": [
    "## ESPERIMENTANDO SE O PILLOW DO PYTHON IMPRIMI CODIGO DE BARRAS"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "#### O SEGREDO ESTA EM UTILIZAR OS ARQUIVOS TFF"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "source": [
    "#### SITE ONDE PEGUEI AS FONTES https://www.dafont.com"
   ],
   "cell_type": "markdown",
   "metadata": {}
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "metadata": {},
   "outputs": [],
   "source": [
    "from PIL import Image, ImageDraw, ImageFont"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 79,
   "metadata": {},
   "outputs": [],
   "source": [
    "img = Image.new('RGB', (2000, 1000))\n",
    "txt = ImageDraw.Draw(img)\n",
    "gre = ImageDraw.Draw(img)\n",
    "amo = ImageDraw.Draw(img)\n",
    "tud = ImageDraw.Draw(img)\n",
    "\n",
    "f = lambda x,y : ImageFont.truetype(x, y)\n",
    "\n",
    "gre.text((10, 0), 'Jesus esta voltando em breve', font=f('/tmp/barcode_font/Kashima Demo.otf', 100))\n",
    "\n",
    "amo.text((10, 100), 'Gregorio Honorato passou por aqui', font=f('/tmp/barcode_font/Almost Japanese Comic.ttf', 100))\n",
    "tud.text((10, 300), 'FUNCIONA MUITO BEM CARA!', font=f('/tmp/barcode_font/Bing Bam Boum.ttf', 100))\n",
    "txt.text((400, 500), 'CODIGO DE BARRAS', font=f('/tmp/barcode_font/BarcodeFont.ttf', 500))\n",
    "\n",
    "img.save('/tmp/img.png')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ]
}